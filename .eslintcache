[{"/home/rohit/Projects/hacked/src/index.js":"1","/home/rohit/Projects/hacked/src/App.js":"2","/home/rohit/Projects/hacked/src/serviceWorkerRegistration.js":"3","/home/rohit/Projects/hacked/src/theme.js":"4","/home/rohit/Projects/hacked/src/pages/index.js":"5","/home/rohit/Projects/hacked/src/pages/auth/index.js":"6","/home/rohit/Projects/hacked/src/pages/admin/index.js":"7","/home/rohit/Projects/hacked/src/pages/user/index.js":"8","/home/rohit/Projects/hacked/src/pages/admin/home/index.jsx":"9","/home/rohit/Projects/hacked/src/pages/user/exam/index.jsx":"10","/home/rohit/Projects/hacked/src/pages/user/home/index.jsx":"11","/home/rohit/Projects/hacked/src/config.js":"12","/home/rohit/Projects/hacked/src/pages/user/home/passwordModal.jsx":"13","/home/rohit/Projects/hacked/src/pages/user/exam/timeVideoComponent.jsx":"14","/home/rohit/Projects/hacked/src/pages/user/exam/questionNumberCard.jsx":"15","/home/rohit/Projects/hacked/src/components/loading.jsx":"16","/home/rohit/Projects/hacked/src/pages/user/exam/questionCard.jsx":"17","/home/rohit/Projects/hacked/src/pages/user/home/examCard.jsx":"18","/home/rohit/Projects/hacked/src/hooks/useSecureStorage.jsx":"19","/home/rohit/Projects/hacked/src/pages/user/exam/countdownTimer.jsx":"20","/home/rohit/Projects/hacked/src/pages/auth/login/index.jsx":"21","/home/rohit/Projects/hacked/src/pages/auth/registration/index.jsx":"22","/home/rohit/Projects/hacked/src/pages/admin/form/index.jsx":"23","/home/rohit/Projects/hacked/src/pages/admin/form/loadingDialog.jsx":"24","/home/rohit/Projects/hacked/src/pages/admin/form/submitDialog.jsx":"25","/home/rohit/Projects/hacked/src/pages/admin/form/successDialog.jsx":"26","/home/rohit/Projects/hacked/src/pages/admin/form/QuestionModal.jsx":"27","/home/rohit/Projects/hacked/src/pages/user/exam/video/index.jsx":"28"},{"size":568,"mtime":1612333281627,"results":"29","hashOfConfig":"30"},{"size":817,"mtime":1612429163519,"results":"31","hashOfConfig":"30"},{"size":5966,"mtime":1612333240502,"results":"32","hashOfConfig":"30"},{"size":396,"mtime":1612238314209,"results":"33","hashOfConfig":"30"},{"size":130,"mtime":1612416417020,"results":"34","hashOfConfig":"30"},{"size":98,"mtime":1612410242694,"results":"35","hashOfConfig":"30"},{"size":89,"mtime":1612410639850,"results":"36","hashOfConfig":"30"},{"size":92,"mtime":1612416483744,"results":"37","hashOfConfig":"30"},{"size":2133,"mtime":1612429195102,"results":"38","hashOfConfig":"30"},{"size":3160,"mtime":1612418452532,"results":"39","hashOfConfig":"30"},{"size":2552,"mtime":1612429195106,"results":"40","hashOfConfig":"30"},{"size":796,"mtime":1612410242694,"results":"41","hashOfConfig":"30"},{"size":2514,"mtime":1612431800531,"results":"42","hashOfConfig":"30"},{"size":741,"mtime":1612495780276,"results":"43","hashOfConfig":"30"},{"size":1032,"mtime":1612410242698,"results":"44","hashOfConfig":"30"},{"size":452,"mtime":1612245142682,"results":"45","hashOfConfig":"30"},{"size":2279,"mtime":1612410242698,"results":"46","hashOfConfig":"30"},{"size":12396,"mtime":1612431989834,"results":"47","hashOfConfig":"30"},{"size":487,"mtime":1612249760366,"results":"48","hashOfConfig":"30"},{"size":1926,"mtime":1612249981011,"results":"49","hashOfConfig":"30"},{"size":3883,"mtime":1612410242694,"results":"50","hashOfConfig":"30"},{"size":7000,"mtime":1612410242698,"results":"51","hashOfConfig":"30"},{"size":11193,"mtime":1612495057140,"results":"52","hashOfConfig":"30"},{"size":998,"mtime":1612418583304,"results":"53","hashOfConfig":"30"},{"size":1769,"mtime":1612412361669,"results":"54","hashOfConfig":"30"},{"size":2710,"mtime":1612418627997,"results":"55","hashOfConfig":"30"},{"size":4848,"mtime":1612238314209,"results":"56","hashOfConfig":"30"},{"size":3961,"mtime":1612501830714,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"xwit5y",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/rohit/Projects/hacked/src/index.js",[],["116","117"],"/home/rohit/Projects/hacked/src/App.js",[],"/home/rohit/Projects/hacked/src/serviceWorkerRegistration.js",[],"/home/rohit/Projects/hacked/src/theme.js",[],"/home/rohit/Projects/hacked/src/pages/index.js",[],"/home/rohit/Projects/hacked/src/pages/auth/index.js",[],"/home/rohit/Projects/hacked/src/pages/admin/index.js",[],"/home/rohit/Projects/hacked/src/pages/user/index.js",[],"/home/rohit/Projects/hacked/src/pages/admin/home/index.jsx",[],"/home/rohit/Projects/hacked/src/pages/user/exam/index.jsx",[],"/home/rohit/Projects/hacked/src/pages/user/home/index.jsx",[],"/home/rohit/Projects/hacked/src/config.js",[],"/home/rohit/Projects/hacked/src/pages/user/home/passwordModal.jsx",[],"/home/rohit/Projects/hacked/src/pages/user/exam/timeVideoComponent.jsx",[],"/home/rohit/Projects/hacked/src/pages/user/exam/questionNumberCard.jsx",[],"/home/rohit/Projects/hacked/src/components/loading.jsx",[],"/home/rohit/Projects/hacked/src/pages/user/exam/questionCard.jsx",[],"/home/rohit/Projects/hacked/src/pages/user/home/examCard.jsx",["118","119","120","121"],"import {\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    makeStyles,\n    Snackbar,\n    Typography,\n} from \"@material-ui/core\";\nimport {\n    CloudDownloadOutlined as DownloadIcon,\n    DoneOutlineOutlined as ExamIcon,\n    PublishTwoTone as SubmitIcon,\n} from \"@material-ui/icons\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { backendURL, secureStorage } from \"../../../config\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n        \"& > * + *\": {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst ExamCard = ({ item, index, isadmin, setPasswordOpen, setExamid }) => {\n    const classes = useStyles();\n    const vertical = \"top\",\n        horizontal = \"center\";\n\n    const EXAMID = item._id;\n    const [savedAnswers, setSavedAnswers] = useState(\n        secureStorage.getItem(`${EXAMID}_answer`)\n    );\n\n    const [answerInfoOpen, setAnswerInfoOpen] = useState(false);\n    const [answerSuccessOpen, setAnswerSuccessOpen] = useState(false);\n    const [temp, setTemp] = useState(\"\");\n\n    const [isSavedAnswer, setIsSavedAnswer] = useState(\n        savedAnswers !== null && savedAnswers !== undefined\n    );\n\n    const [downloaded, setDownloaded] = useState(\n        secureStorage.getItem(item._id)\n    );\n\n    const [isSubmitted, setSubmitted] = useState(() => {\n        let arr = secureStorage.getItem(\"submittedQuiz\");\n        if (!arr) {\n            return false;\n        }\n        // arr = JSON.parse(arr);\n        if (arr.find((it) => it === item._id)) {\n            return true;\n        }\n        return false;\n    });\n\n    const [infoOpen, setInfoOpen] = useState(false);\n    const [successOpen, setSuccessOpen] = useState(false);\n    const [msg, setMsg] = useState(\"\");\n\n    const handleAnswerSuccessClick = () => {\n        setAnswerSuccessOpen(true);\n    };\n\n    const handleAnswerSuccessClose = (event, reason) => {\n        if (reason === \"clickaway\") {\n            return;\n        }\n\n        setAnswerSuccessOpen(false);\n    };\n\n    const handleInfoClick = () => {\n        setInfoOpen(true);\n    };\n\n    const handleAnswerInfoClick = () => {\n        setAnswerInfoOpen(true);\n    };\n\n    const handleAnswerInfoClose = (event, reason) => {\n        if (reason === \"clickaway\") {\n            return;\n        }\n\n        setAnswerInfoOpen(false);\n    };\n\n    const handleInfoClose = (event, reason) => {\n        if (reason === \"clickaway\") {\n            return;\n        }\n\n        setInfoOpen(false);\n    };\n\n    const handleSuccessClick = () => {\n        setSuccessOpen(true);\n    };\n\n    const handleSuccessClose = (event, reason) => {\n        if (reason === \"clickaway\") {\n            return;\n        }\n\n        setSuccessOpen(false);\n    };\n\n    const formatDate = (date) => {\n        date = new Date(date);\n        var hours = date.getHours();\n        var minutes = date.getMinutes();\n        var ampm = hours >= 12 ? \"pm\" : \"am\";\n        hours = hours % 12;\n        hours = hours ? hours : 12; // the hour '0' should be '12'\n        minutes = minutes < 10 ? \"0\" + minutes : minutes;\n        var strTime = hours + \":\" + minutes + \" \" + ampm;\n        return strTime;\n    };\n\n    const downloadExam = () => {\n        handleInfoClick();\n        axios\n            .get(`${backendURL}/exam/download`, { headers: { id: item._id } })\n            .then((res) => {\n                handleInfoClose();\n                setMsg(\"Paper Downloaded!\");\n                secureStorage.setItem(item._id, res.data);\n                setDownloaded(true);\n                handleSuccessClick();\n            })\n            .catch((err) => {\n                console.log(err);\n                setMsg(\"Something went wrong! Please try again\");\n                handleInfoClose(false);\n                handleSuccessClick();\n            });\n    };\n\n    const submitAnswers = () => {\n        handleAnswerInfoClick();\n        const data = {\n            examID: item._id,\n            answers: savedAnswers,\n        };\n        axios\n            .post(`${backendURL}/answer/submitAnswers`, data)\n            .then((response) => {\n                handleAnswerInfoClose();\n                // console.log(response.data);\n                setMsg(response.data);\n                // setIsSavedAnswer(false);\n                let arr = secureStorage.getItem(\"submittedQuiz\");\n                if (!arr) {\n                    arr = [];\n                }\n                setSubmitted(true);\n                arr.push(item._id);\n                secureStorage.setItem(\"submittedQuiz\", arr);\n                secureStorage.removeItem(`${data.examID}_answer`);\n                handleAnswerSuccessClick();\n            })\n            .catch((error) => {\n                console.log(error.message);\n                setMsg(\"Something went wrong! Please try again\");\n                handleAnswerInfoClose();\n                handleAnswerSuccessClick();\n            });\n    };\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <Snackbar\n                    open={answerSuccessOpen}\n                    autoHideDuration={3000}\n                    onClose={handleAnswerSuccessClose}\n                    anchorOrigin={{ vertical, horizontal }}\n                    key={vertical + horizontal}\n                >\n                    <Alert\n                        onClose={handleAnswerSuccessClose}\n                        severity={msg.startsWith(\"Ans\") ? \"success\" : \"warning\"}\n                    >\n                        {msg}\n                    </Alert>\n                </Snackbar>\n            </div>\n            <div className={classes.root}>\n                <Snackbar\n                    open={answerInfoOpen}\n                    //   autoHideDuration={3000}\n                    onClose={handleAnswerInfoClose}\n                    anchorOrigin={{ vertical, horizontal }}\n                    key={vertical + horizontal}\n                >\n                    <Alert onClose={handleAnswerInfoClose} severity=\"info\">\n                        Please wait, your answers are being submitted !\n                    </Alert>\n                </Snackbar>\n            </div>\n            <div className={classes.root}>\n                <Snackbar\n                    open={successOpen}\n                    autoHideDuration={3000}\n                    onClose={handleSuccessClose}\n                    anchorOrigin={{ vertical, horizontal }}\n                    key={vertical + horizontal}\n                >\n                    <Alert\n                        onClose={handleSuccessClose}\n                        severity={msg.startsWith(\"P\") ? \"success\" : \"warning\"}\n                    >\n                        {msg}\n                    </Alert>\n                </Snackbar>\n            </div>\n            <div className={classes.root}>\n                <Snackbar\n                    open={infoOpen}\n                    //   autoHideDuration={3000}\n                    onClose={handleInfoClose}\n                    anchorOrigin={{ vertical, horizontal }}\n                    key={vertical + horizontal}\n                >\n                    <Alert onClose={handleInfoClose} severity=\"info\">\n                        Please wait, Paper is downloading !\n                    </Alert>\n                </Snackbar>\n            </div>\n\n            <Card\n                variant=\"outlined\"\n                elevation={4}\n                style={{ marginTop: \"2rem\" }}\n            >\n                <CardContent>\n                    <div\n                        style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-between\",\n                        }}\n                    >\n                        <Typography color=\"textPrimary\" variant=\"h6\">\n                            {item.title || \"N/A\"}\n                        </Typography>\n\n                        {!isadmin && (\n                            <Typography\n                                variant=\"caption\"\n                                className=\"status_info_text\"\n                            >\n                                {(!downloaded && \"Paper not Dowloaded yet\") ||\n                                    (item.startTime > new Date().valueOf() &&\n                                        \"Exam not started yet\") ||\n                                    (item.endTime < new Date().valueOf() &&\n                                        \"Exam time finished\") ||\n                                    ((isSubmitted || isSavedAnswer) &&\n                                        \"Exam Completed\") ||\n                                    \"Ready to start\"}\n                            </Typography>\n                        )}\n                    </div>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                        {item.subTitle || \"N/A\"}\n                    </Typography>\n                    <Typography color=\"textSecondary\" variant=\"body2\">\n                        <b>Start Time: </b> {formatDate(item.startTime)}\n                    </Typography>\n                    <Typography color=\"textSecondary\" variant=\"body2\">\n                        <b>End Time: </b> {formatDate(item.endTime)}\n                    </Typography>\n                    <Typography color=\"textSecondary\" variant=\"body2\">\n                        <b>Number of Questions: </b> {item.totalQuestions}\n                    </Typography>\n\n                    <Typography color=\"textSecondary\" variant=\"body2\">\n                        <b>Total Marks: </b> {item.totalMarks}\n                    </Typography>\n                    {isadmin && (\n                        <Typography color=\"textSecondary\" variant=\"body2\">\n                            <b>Password: </b> {item.key}\n                        </Typography>\n                    )}\n                </CardContent>\n                <CardActions\n                    style={{ paddingBottom: \"1rem\", paddingLeft: \"1rem\" }}\n                >\n                    {!isadmin && (\n                        <>\n                            <Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={downloaded ? true : false}\n                                startIcon={<DownloadIcon />}\n                                onClick={downloadExam}\n                            >\n                                Download\n                            </Button>\n                            <Button\n                                color=\"secondary\"\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={\n                                    !downloaded ||\n                                    !(\n                                        item.startTime < new Date().valueOf() &&\n                                        item.endTime > new Date().valueOf()\n                                    ) ||\n                                    isSubmitted ||\n                                    isSavedAnswer\n                                }\n                                onClick={() => {\n                                    setPasswordOpen(true);\n                                    setExamid(item._id);\n                                }}\n                                startIcon={<ExamIcon />}\n                            >\n                                Start exam\n                            </Button>\n                            <Button\n                                color=\"secondary\"\n                                variant=\"contained\"\n                                size=\"small\"\n                                disabled={isSubmitted || !isSavedAnswer}\n                                onClick={() => {\n                                    submitAnswers();\n                                }}\n                                startIcon={<SubmitIcon />}\n                            >\n                                Submit Answers\n                            </Button>\n                        </>\n                    )}\n                </CardActions>\n            </Card>\n        </div>\n    );\n};\n\nexport default ExamCard;\n","/home/rohit/Projects/hacked/src/hooks/useSecureStorage.jsx",[],"/home/rohit/Projects/hacked/src/pages/user/exam/countdownTimer.jsx",[],"/home/rohit/Projects/hacked/src/pages/auth/login/index.jsx",[],"/home/rohit/Projects/hacked/src/pages/auth/registration/index.jsx",[],"/home/rohit/Projects/hacked/src/pages/admin/form/index.jsx",[],"/home/rohit/Projects/hacked/src/pages/admin/form/loadingDialog.jsx",[],"/home/rohit/Projects/hacked/src/pages/admin/form/submitDialog.jsx",[],"/home/rohit/Projects/hacked/src/pages/admin/form/successDialog.jsx",[],"/home/rohit/Projects/hacked/src/pages/admin/form/QuestionModal.jsx",[],"/home/rohit/Projects/hacked/src/pages/user/exam/video/index.jsx",["122"],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":39,"column":26,"nodeType":"129","messageId":"130","endLine":39,"endColumn":41},{"ruleId":"127","severity":1,"message":"131","line":45,"column":12,"nodeType":"129","messageId":"130","endLine":45,"endColumn":16},{"ruleId":"127","severity":1,"message":"132","line":45,"column":18,"nodeType":"129","messageId":"130","endLine":45,"endColumn":25},{"ruleId":"127","severity":1,"message":"133","line":47,"column":27,"nodeType":"129","messageId":"130","endLine":47,"endColumn":43},{"ruleId":"134","severity":1,"message":"135","line":96,"column":8,"nodeType":"136","endLine":96,"endColumn":10,"suggestions":"137"},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'setSavedAnswers' is assigned a value but never used.","Identifier","unusedVar","'temp' is assigned a value but never used.","'setTemp' is assigned a value but never used.","'setIsSavedAnswer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'recognizeFaces'. Either include it or remove the dependency array.","ArrayExpression",["140"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},"Update the dependencies array to be: [recognizeFaces]",{"range":"143","text":"144"},[3594,3596],"[recognizeFaces]"]